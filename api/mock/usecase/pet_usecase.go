// Code generated by MockGen. DO NOT EDIT.
// Source: pet_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	model "api/pkg/domain/model"
	infrastructure "api/pkg/infrastructure"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPetUseCase is a mock of PetUseCase interface.
type MockPetUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockPetUseCaseMockRecorder
}

// MockPetUseCaseMockRecorder is the mock recorder for MockPetUseCase.
type MockPetUseCaseMockRecorder struct {
	mock *MockPetUseCase
}

// NewMockPetUseCase creates a new mock instance.
func NewMockPetUseCase(ctrl *gomock.Controller) *MockPetUseCase {
	mock := &MockPetUseCase{ctrl: ctrl}
	mock.recorder = &MockPetUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPetUseCase) EXPECT() *MockPetUseCaseMockRecorder {
	return m.recorder
}

// GetPetSummary mocks base method.
func (m *MockPetUseCase) GetPetSummary(db *infrastructure.RDB, petId uint64) (*model.PetSummary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPetSummary", db, petId)
	ret0, _ := ret[0].(*model.PetSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPetSummary indicates an expected call of GetPetSummary.
func (mr *MockPetUseCaseMockRecorder) GetPetSummary(db, petId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPetSummary", reflect.TypeOf((*MockPetUseCase)(nil).GetPetSummary), db, petId)
}
